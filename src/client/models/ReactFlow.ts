/* tslint:disable */
/* eslint-disable */
/**
 * Situation API
 * Information System Knowledges
 *
 * The version of the OpenAPI document: 0.15.2 (0.15.2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReactFlowEdge } from './ReactFlowEdge';
import {
    ReactFlowEdgeFromJSON,
    ReactFlowEdgeFromJSONTyped,
    ReactFlowEdgeToJSON,
} from './ReactFlowEdge';
import type { ReactFlowNode } from './ReactFlowNode';
import {
    ReactFlowNodeFromJSON,
    ReactFlowNodeFromJSONTyped,
    ReactFlowNodeToJSON,
} from './ReactFlowNode';

/**
 * 
 * @export
 * @interface ReactFlow
 */
export interface ReactFlow {
    /**
     * 
     * @type {Array<ReactFlowEdge>}
     * @memberof ReactFlow
     */
    edges: Array<ReactFlowEdge>;
    /**
     * 
     * @type {Array<ReactFlowNode>}
     * @memberof ReactFlow
     */
    nodes: Array<ReactFlowNode>;
}

/**
 * Check if a given object implements the ReactFlow interface.
 */
export function instanceOfReactFlow(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "edges" in value;
    isInstance = isInstance && "nodes" in value;

    return isInstance;
}

export function ReactFlowFromJSON(json: any): ReactFlow {
    return ReactFlowFromJSONTyped(json, false);
}

export function ReactFlowFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReactFlow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'edges': ((json['edges'] as Array<any>).map(ReactFlowEdgeFromJSON)),
        'nodes': ((json['nodes'] as Array<any>).map(ReactFlowNodeFromJSON)),
    };
}

export function ReactFlowToJSON(value?: ReactFlow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'edges': ((value.edges as Array<any>).map(ReactFlowEdgeToJSON)),
        'nodes': ((value.nodes as Array<any>).map(ReactFlowNodeToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Situation API
 * Information System Knowledges
 *
 * The version of the OpenAPI document: 0.15.2 (0.15.2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This serializer activates the tracking of
 * serialized objects.
 * It adds the `_represented` (not to use), the `represented`
 * and `reset` methods.
 * Important: it overrides the `to_representation` common method
 * of `Serializer` objects.
 * @export
 * @interface Metadata
 */
export interface Metadata {
    /**
     * 
     * @type {number}
     * @memberof Metadata
     */
    readonly contentType: number;
    /**
     * 
     * @type {number}
     * @memberof Metadata
     */
    graphObject: number;
    /**
     * 
     * @type {number}
     * @memberof Metadata
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof Metadata
     */
    key: string;
    /**
     * 
     * @type {any}
     * @memberof Metadata
     */
    value: any | null;
}

/**
 * Check if a given object implements the Metadata interface.
 */
export function instanceOfMetadata(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "contentType" in value;
    isInstance = isInstance && "graphObject" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "key" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function MetadataFromJSON(json: any): Metadata {
    return MetadataFromJSONTyped(json, false);
}

export function MetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): Metadata {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contentType': json['content_type'],
        'graphObject': json['graph_object'],
        'id': json['id'],
        'key': json['key'],
        'value': json['value'],
    };
}

export function MetadataToJSON(value?: Metadata | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'graph_object': value.graphObject,
        'key': value.key,
        'value': value.value,
    };
}

